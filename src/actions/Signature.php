<?php
/**
 * Created by PhpStorm.
 * User: guoxiaosong
 * Date: 2016/11/28
 * Time: 15:02
 */
namespace liyifei\uploadOSS\actions;

use Yii;
use yii\base\Action;
use yii\helpers\Json;
use yii\web\Response;

class Signature extends Action
{
    public $accessKeyId;
    public $accessKeySecret;
    public $host;

    /**
     * @var string
     */
    public $directory;
    
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        if (!$this->directory) {
            $this->directory = date('Y/m/');
        }
    }

    public function run()
    {
        $isLowIE = Yii::$app->request->get('lowIE');
        if (!$isLowIE) {
            Yii::$app->response->format = Response::FORMAT_JSON;
        }

        $expire = time() + 30; //设置该policy超时时间是30s. 即这个policy过了这个有效时间，将不能访问
        $expiration = self::getGmtISO8601($expire);

        $conditions = [];
        //最大文件大小.用户可以自己设置
        $conditions[] = ['content-length-range', 0, 1048576000];

        //表示用户上传的数据,必须是以$dir开始, 不然上传会失败,这一步不是必须项,只是为了安全起见,防止用户通过policy上传到别人的目录
        $conditions[] = ['starts-with', '$key', $this->directory];

        $stringToSign = $base64Policy = base64_encode(json_encode([
            'expiration' => $expiration,
            'conditions' => $conditions
        ]));
        $signature = base64_encode(hash_hmac('sha1', $stringToSign, $this->accessKeySecret, true));

        $response = [
            'accessKeyId' => $this->accessKeyId,
            'host' => $this->host,
            'policy' => $base64Policy,
            'signature' => $signature,
            'expire' => $expire,
            'directory' => $this->directory
        ];

        return $isLowIE ? Json::encode($response) :$response;
    }

    private static function getGmtISO8601($time)
    {
        $dtStr = date("c", $time);
        $datetime = new \DateTime($dtStr);
        $expiration = $datetime->format(\DateTime::ISO8601);
        $pos = strpos($expiration, '+');
        $expiration = substr($expiration, 0, $pos);
        return $expiration."Z";
    }
}